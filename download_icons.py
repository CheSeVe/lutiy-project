import os
import time
import requests

# –ü–∞–ø–∫–∞, –∫—É–¥–∞ –±—É–¥—É—Ç —Å–æ—Ö—Ä–∞–Ω—è—Ç—å—Å—è –∏–∫–æ–Ω–∫–∏
SAVE_DIR = "src/main/resources/static/item-icons/neutral-items"
os.makedirs(SAVE_DIR, exist_ok=True)

# API MediaWiki (Liquipedia)
API_URL = "https://liquipedia.net/commons/api.php"
CATEGORY = "Category:Dota_2_neutral_item_icons"

# –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —É–∂–µ —Å–∫–∞—á–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
seen_files = set()
downloaded = 0

# —Å—Ç–∞—Ä—Ç–æ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞
params = {
    "action": "query",
    "format": "json",
    "list": "categorymembers",
    "cmtitle": CATEGORY,
    "cmtype": "file",
    "cmlimit": "50"
}

session = requests.Session()

# –Ω–∞—á–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞
delay = 2
# –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞
max_delay = 120
# –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞
min_delay = 2

print("üöÄ –ù–∞—á–∏–Ω–∞—é –∑–∞–≥—Ä—É–∑–∫—É –∏–∫–æ–Ω–æ–∫ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ Dota 2...")

while True:
    response = session.get(API_URL, params=params, headers={
        "User-Agent": "LutiyProjectBot/1.0 (https://example.com)"
    }, timeout=10)

    if response.status_code == 429:
        delay = min(delay * 2, max_delay)  # —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –≤ 2 —Ä–∞–∑–∞
        print(f"‚ö†Ô∏è Rate limit! –ñ–¥—É {delay} —Å–µ–∫—É–Ω–¥...")
        time.sleep(delay)
        continue
    elif response.status_code != 200:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ HTTP {response.status_code}, —Ç–µ–∫—Å—Ç: {response.text[:200]}")
        break

    try:
        data = response.json()
    except Exception as e:
        print(f"‚ö†Ô∏è –ù–µ JSON –æ—Ç–≤–µ—Ç: {e}, –ø–µ—Ä–≤—ã–µ —Å–∏–º–≤–æ–ª—ã: {response.text[:200]}")
        break

    members = data.get("query", {}).get("categorymembers", [])
    if not members:
        print("‚ö†Ô∏è –ù–µ—Ç —Ñ–∞–π–ª–æ–≤ –≤ –æ—Ç–≤–µ—Ç–µ API, –≤—ã—Ö–æ–¥–∏–º")
        break

    for page in members:
        if page["title"].startswith("File:"):
            filename = page["title"].replace("File:", "")
            if filename in seen_files:
                continue
            seen_files.add(filename)

            print(f"‚¨áÔ∏è –°–∫–∞—á–∏–≤–∞—é {filename}...")

            try:
                # –≤—Ç–æ—Ä–æ–π –∑–∞–ø—Ä–æ—Å ‚Äì —á—Ç–æ–±—ã –¥–æ—Å—Ç–∞—Ç—å –ø—Ä—è–º–æ–π URL –∫–∞—Ä—Ç–∏–Ω–∫–∏
                image_info = session.get(API_URL, params={
                    "action": "query",
                    "format": "json",
                    "titles": page["title"],
                    "prop": "imageinfo",
                    "iiprop": "url"
                }, headers={"User-Agent": "LutiyProjectBot/1.0"}, timeout=10)

                if image_info.status_code == 429:
                    delay = min(delay * 2, max_delay)
                    print(f"‚ö†Ô∏è Rate limit –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ URL! –ñ–¥—É {delay} —Å–µ–∫—É–Ω–¥...")
                    time.sleep(delay)
                    continue

                pages = image_info.json()["query"]["pages"]
                image_url = list(pages.values())[0]["imageinfo"][0]["url"]

                img_data = session.get(image_url, timeout=10, headers={"User-Agent": "LutiyProjectBot/1.0"}).content
                with open(os.path.join(SAVE_DIR, filename), "wb") as f:
                    f.write(img_data)

                downloaded += 1
                print(f"‚úÖ –°–æ—Ö—Ä–∞–Ω—ë–Ω {filename}")

                # –µ—Å–ª–∏ –≤—Å—ë –æ–∫ ‚Äî —É–º–µ–Ω—å—à–∞–µ–º –∑–∞–¥–µ—Ä–∂–∫—É (–ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ min_delay)
                delay = max(min_delay, delay // 2)

                time.sleep(delay)

            except Exception as e:
                print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å {filename}: {e}")

    # –ø–∞—É–∑–∞ –º–µ–∂–¥—É —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    time.sleep(delay)

    # –µ—Å–ª–∏ –µ—Å—Ç—å –µ—â—ë —Å—Ç—Ä–∞–Ω–∏—Ü—ã ‚Äî –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º
    if "continue" in data:
        params.update(data["continue"])
    else:
        break

print(f"üéâ –°–∫–∞—á–∞–Ω–æ {downloaded} —Ñ–∞–π–ª–æ–≤ –≤ {SAVE_DIR}")
